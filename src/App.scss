@import "style/Variable/variable";
@import "node_modules/duckui/Duck";

@import "modal_slice";

.form-file-upload {
  &.dragging {
    .label-file-upload {
      filter: drop-shadow(0px 0px 400px #292985);
    }
  }

  //max-height: 300px;
  transition: max-height 0.34s ease;

  &.has-file {
    height: 120px; /* Height when a file is present */
    max-height: 120px;
  }

}

.form-folder-upload {
  .list-file-upload {
    max-height: 540px;
    overflow-y: auto;
  }

  &.dragging {
    .label-file-upload {
      filter: drop-shadow(0px 0px 400px #292985);
    }
  }

  //max-height: 300px;
  transition: max-height 0.34s ease;

  &.has-file {
    height: fit-content !important; /* Height when a file is present */
  }

  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 8px;

  .file-upload {
    .loading {
      display: none;
    }

    &.on-upload {
      .loading {
        position: absolute;
        display: flex;
        z-index: 2;
        content: "";
        box-sizing: inherit;
        height: 64px;
        width: 64px;
        top: calc(50% - (64px * .5));
        left: calc(50% - (64px * .5));
        border: 8px solid transparent;
        border-radius: 50%;
        animation: loading-spinner 1s ease infinite;
        border-top-color: map-get($shades, white) !important;
      }

    }

    position: relative;
    height: fit-content !important;
    max-height: 120px !important;

    .control-file-upload {
      position: absolute;
      top: map-get($sizes, s);
      right: map-get($sizes, s);
      display: none;
      background-color: map-get($shades, mute);
    }

    img {
      height: calc(map-get($sizes, xl) * 12);
    }

    &:hover {
      .control-file-upload {
        display: flex;
      }

      img {
        filter: blur(2px);
      }
    }
  }
}

.text-unwrap {
  white-space: nowrap;
}

.text-wrap {
  overflow-wrap: anywhere; /* Tự động xuống dòng dù không có dấu cách */
  word-break: break-word; /* Hỗ trợ các trình duyệt cũ */
  white-space: normal;
}

.is-2-line {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.truncate {
  white-space: pre-wrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.is-calc2 {
  max-height: calc(100vh - 32px - 68px) !important;
  height: 100% !important;
  overflow: auto;
}

.is-calc3 {
  max-height: calc(100% - 80px) !important;
  height: 100% !important;
  overflow: auto;
}

.item.show {
  .item-collapse {
    max-height: 2000px !important;
    //overflow-y: scroll!important;
  }
}

.fw-active {
  font-weight: 600 !important;
}

.sidebar-main {
  max-height: calc(100vh - 60px) !important;
}

.page {
  margin-top: 10px !important;
}

.control-file-upload {
  background-color: unset !important;
}


.progress-container {
  margin: 4px 0px;
  width: 200px;
  background-color: #e0e0e0;
  border-radius: 5px;
  overflow: hidden;
  height: 8px; /* Height of the progress bar */
  &.size-s {
    width: 50px !important;
  }
}

.progress-bar {
  height: 100%;
  background-color: #007bf5; /* Color of the progress */
  border-radius: 5px;
  transition: width 0.3s ease-in-out; /* Smooth transition */
}

// Define a mixin to apply color
@mixin highlight-color($color) {
  &-background {
    background-color: $color !important;
  }
}

.color {
  &-0 {
    @include highlight-color(#B5E4CA);
  }

  &-1 {
    @include highlight-color(#FFD88D);
  }

  &-2 {
    @include highlight-color(#ff7792);
  }

  &-3 {
    @include highlight-color(#afafaf);
  }

  &-4 {
    @include highlight-color(#2A85FF);
  }

  &-5 {
    @include highlight-color(#FFBC99i);
  }


}

.highlight-color {
  .Highlight__part {
    opacity: 1 !important;
    //border-right: 1px solid $color !important;
    //border-left: 1px solid $color !important;
    background-color: rgb(241, 218, 218) !important;
    border-radius: 4px !important;
    border: 3px solid #ff0000;

    &:before {
      content: "";
      box-sizing: content-box;
      position: absolute;
      width: 100%;
      height: 100%;
      transform: translate(-50%, -50%);
      left: 50%;
      top: 50%;
      border-radius: 4px !important;
      border: 2px solid #ff0000;
      animation: DFJ .3s ease-in;
      z-index: 12;
    }
  }
}

@keyframes SJF {
  from {
    transform: translateY(20px);
  }
  to {
    transform: translateY(0px);
  }
}

.animate-SJF {
  overflow: hidden;
  animation: SJF .3s ease-in;
}

@keyframes DFJ {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.animate-DFJ {
  opacity: 1;
  animation: DFJ .47s ease-in;
}

.bg-shadow {
  background: rgb(255, 255, 255);
  border-radius: 16px;
  filter: drop-shadow(0px 0px 4px rgba(157, 157, 157, 0.29));
}

.customs-style {
  position: relative;

  &.active {
    &:before {
      content: "";
      position: absolute;
      border: 2px solid #FE8E3E;
      border-radius: 12px;
      width: 36px;
      height: 36px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1;
    }
  }
}

.customs-style-2 {
  position: relative;
  border-radius: 30px;

  &.active {
    &:before {
      content: "";
      position: absolute;
      border: 2px solid #FE8E3E;
      border-radius: 32px;
      width: 120%;
      height: 120%;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1;
    }
  }
}

.icon {
  line-height: 80% !important;
}

@mixin background-color($color) {
  .Highlight__part, .mark {
    box-sizing: border-box;
    opacity: .5;
    //border-right: 1px solid $color !important;
    //border-left: 1px solid $color !important;
    background-color: $color !important;
    border: 2px solid $color !important;
    border-radius: 4px !important;
    //border: 1px solid $color;
    box-shadow: -1px 0px 0px 1px $color;
  }

}

@mixin round-color($color) {
  .Highlight__part, .mark {
    box-sizing: border-box;
    opacity: 1;
    border: 2px solid $color !important;
    border-radius: 4px !important;
    background: unset !important;
    //box-shadow: -1px 0px 0px 1px $color;
  }
}

@mixin dash-color($color) {
  .Highlight__part, .mark {
    box-sizing: border-box;
    opacity: 1;
    border: dashed 2px $color !important;
    border-radius: 4px !important;
    background: unset !important;
    //box-shadow: -1px 0px 0px 1px $color;
  }
}

$color-0: #B5E4CA;
$color-1: #FFD88D;
$color-2: #ff7792;
$color-3: #afafaf;
$color-4: #2A85FF;
$color-5: #FFBC99i;


// Mixin to apply styles based on parent classes
@mixin highlight-styles($index) {
  // For background styles

  .cl-#{$index}-0 {
    &.bg-#{$index} {
      .hl-#{$index} {
        @include background-color($color-0);
      }
    }

    &.rd-#{$index} {
      .hl-#{$index} {
        @include round-color($color-0);
      }
    }

    &.da-#{$index} {
      .hl-#{$index} {
        @include dash-color($color-0);
      }
    }
  }

  .cl-#{$index}-1 {
    &.bg-#{$index} {
      .hl-#{$index} {
        @include background-color($color-1);
      }
    }

    &.rd-#{$index} {
      .hl-#{$index} {
        @include round-color($color-1);
      }
    }

    &.da-#{$index} {
      .hl-#{$index} {
        @include dash-color($color-1);
      }
    }
  }

  .cl-#{$index}-2 {
    &.bg-#{$index} {
      .hl-#{$index} {
        @include background-color($color-2);
      }
    }

    &.rd-#{$index} {
      .hl-#{$index} {
        @include round-color($color-2);
      }
    }

    &.da-#{$index} {
      .hl-#{$index} {
        @include dash-color($color-2);
      }
    }
  }

  .cl-#{$index}-3 {
    &.bg-#{$index} {
      .hl-#{$index} {
        @include background-color($color-3);
      }
    }

    &.rd-#{$index} {
      .hl-#{$index} {
        @include round-color($color-3);
      }
    }

    &.da-#{$index} {
      .hl-#{$index} {
        @include dash-color($color-3);
      }
    }
  }

  .cl-#{$index}-4 {
    &.bg-#{$index} {
      .hl-#{$index} {
        @include background-color($color-4);
      }
    }

    &.rd-#{$index} {
      .hl-#{$index} {
        @include round-color($color-4);
      }
    }

    &.da-#{$index} {
      .hl-#{$index} {
        @include dash-color($color-4);
      }
    }
  }

  .cl-#{$index}-5 {
    &.bg-#{$index} {
      .hl-#{$index} {
        @include background-color($color-5);
      }
    }

    &.rd-#{$index} {
      .hl-#{$index} {
        @include round-color($color-5);
      }
    }

    &.da-#{$index} {
      .hl-#{$index} {
        @include dash-color($color-5);
      }
    }
  }


}

// Example usage for multiple indices
@for $i from 0 through 4 {
  @include highlight-styles($i);
}

.size-mark {
  height: 28px;

  .mark {
    border-radius: 16px !important;
    opacity: 1 !important;
  }
}

.hi-6xl {
  font-size: clamp(10.25rem, 3.1977rem + 11.6279vw, 24.5rem);
  line-height: normal;

}

.hi-5xl {
  font-size: clamp(6.25rem, 3.1977rem + 11.6279vw, 12.5rem);
  line-height: normal;

}

.hi-4xl {
  font-size: calc(48px + (96 - 48) * ((100vw - 300px) / (1440 - 300)));
  line-height: normal;
}

.hi-3xl {
  font-size: calc(32px + (96 - 48) * ((100vw - 300px) / (1440 - 300)));
  line-height: normal;

}

.hi-xxl {
  font-size: calc(28px + (72 - 48) * ((100vw - 300px) / (1440 - 300)));
  line-height: normal;

}

.hi-xl {
  font-size: clamp(1.5rem, 0.672rem + 2.586vw, 3rem);
  line-height: normal;

}

.color-brand {
  color: #F27423
}

.bg-brand {
  background-color: #F27423
}

.rotate-animate {
  animation: rotate 15s infinite linear;
}

.logo-transform {
  z-index: 0;
  //opacity: .35;
  left: 50%;
  //transform: translate(-50%,50%);
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.toasts-container-2 {
  display: flex;
  flex-direction: column;
  row-gap: 12px;
  position: fixed;
  z-index: 9999;

  &.top-right {
    top: 16px;
    right: 16px;
  }

  &.top-left {
    top: 16px;
    left: 16px;
  }

  &.top-center {
    top: 16px;
    left: 50%;
    transform: translateX(-50%);
  }

  &.bottom-left {
    bottom: 16px;
    left: 16px;
  }

  &.bottom-center {
    bottom: 16px;
    left: 50%;
    transform: translateX(-50%);
  }

  &.bottom-right {
    bottom: 16px;
    right: 16px;
  }

  .toast {

    display: flex;
    align-items: stretch;
    flex-direction: row;
    overflow: hidden;

    .toast-icon {
      display: flex;
      align-items: center;
    }

    /* rest of the properties */
    animation: slide-in-2 0.4s ease-in-out forwards;

    &-dismissed {
      animation: slide-up 0.4s ease-in-out forwards;
    }

    .toast-message {
      display: flex;
      justify-content: space-between;
      padding: map-get($sizes, s);
      width: 450px;
    }
  }


}


@keyframes slide-in-2 {
  0% {
    opacity: 0;
    transform: translateY(200%) scaleX(0.2);
  }
  100% {
    opacity: 1;
    transform: translateY(0%) scaleX(1);
    max-width: 450px;
  }
}

.toast-dismissed {
  animation: slide-up 0.4s ease-in-out forwards;
}

@keyframes slide-up {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.expand-vertical {
  max-height: 0px;
  overflow: hidden;
  transition: max-height 0.37s ease-in;

  &.active {
    max-height: 556px;
    transition: max-height 0.37s ease-in;
  }
}

.tag {
  @mixin chipsMediumAtr {
    box-sizing: border-box !important;
    cursor: pointer;
    color: map-get($shades, white);
    background-color: map-get($shades, mute);
    display: flex;
    align-items: center;
    justify-content: center;
    height: map-get($InputSize, s) !important;
    padding: 3px 6px 3px 12px !important;
    font-size: 13px !important;
    line-height: 150% !important;
    border-radius: 80px;
    width: fit-content;
    font-weight: $text-bold;
  }
  @include chipsMediumAtr;
  border: 1px solid map-get($shades, sliver);

  &:hover {
    color: map-get($shades, white);
    border: 1px solid map-get(map-get($colors, primary), main);
  }

  &.active {
    border: 1px solid map-get(map-get($colors, primary), main);
    color: map-get(map-get($colors, primary), main);
  }
}

.size-y-256 {
  height: 128px;
}


.size-y-720 {
  height: 720px;
}

.skeleton {
  background-color: #ededed;
  background-image: linear-gradient(90deg, #e0e0e0, rgba(240, 240, 240, 0.51), rgba(224, 224, 224, 0.56));
  background-size: 200% 100%;
  background-position: 100% 0;
  animation: skeleton-loading 1.5s infinite;
}

@keyframes skeleton-loading {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 100% 0;
  }
}

/* Header.css */

.header {
  position: relative;
  width: 100%;
  background-color: #fff;
  transition: top 0.3s;
  z-index: 100;
}

.overview {
  transition: opacity 0.3s;
}


/* Khi header có trạng thái scrolled, ẩn phần overview */
.header {
  max-height: 75px;
  transition: max-height 0.1s ease-in;

  &.scrolled {
    opacity: 0;
    max-height: 0;
    padding: 0;
    overflow: hidden;
  }

}

.tag-editable {
  &:focus {
    outline: 0;
  }

  &[contenteditable=true]:empty:not(:focus):before {
    content: attr(data-ph);
    color: #565656;
  }
}

.dkd {
  max-width: 0px;

  scale: 0.0001;
  overflow: hidden;
  transition: max-width 0.3s ease-in;

  &.active {
    scale: 1;
    max-width: 50px;
  }
}

.select {
  &.select--disabled {
    opacity: .5;
  }
}

.visible-if-hover {
  .is-show {
    display: none;
  }

  &:hover {
    .is-show {
      display: block;
    }
  }
}

.login-bg {
  background: linear-gradient(96deg, rgba(32, 144, 253, 0.10) 0%, rgba(159, 105, 121, 0.10) 33%, rgba(248, 91, 31, 0.10) 65%, rgba(233, 153, 63, 0.10) 100%), #FFF;
}

.brand-logo {
  mix-blend-mode: multiply;
}

.file-bg {
  color: $primary;
  background: rgba(246, 111, 26, 0.17);
}

.Duck .sidebar .sidebar-main .item .sidebar-btn.active {
  &:hover {
    .item-text, .icon {
      color: $black !important;

    }
  }

  background-color: #fa690e;

  .icon {
    color: $white !important;
  }

  .item-text {
    color: $white !important;
  }
}

.min {
  &-y-100 {
    min-height: 100vh;
  }

  &-x-100 {
    min-width: 100vw;
  }
}

input[type="range"] {
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 16px !important;
    height: 16px !important;
    background-color: white !important;
    border: 2px solid $primary;
    border-radius: 50%;
    cursor: pointer;
    outline: 2px solid $primary;
    z-index: 10;
    color: red;
    top: 2px;

  }

  &::-webkit-slider-runnable-track {
    width: 100%;
    height: 8px !important;
    cursor: pointer;
    background: $primary;
    border-radius: 5px;
  }
}

.slider {
  -webkit-appearance: none;
  width: 100%;
  height: 5px !important;
  border-radius: 5px;
  outline: none;
  border: 0px solid transparent !important;
  opacity: 0.7;
  -webkit-transition: 0.2s;
  transition: opacity 0.2s;
}

.label-special {
  max-width: 30px !important;
}

.Duck input {
  .slider {
    height: 12px !important;
  }
}

.tableFixHead {
  overflow: auto;
}

.tableFixHead thead tr {
  position: sticky;
  top: 0;
  z-index: 1;
}

.is-grow {
  min-height: 0px;
}

.form-radio {
  position: relative;
  display: flex;
  align-items: center;
  padding-left: 28px;
  cursor: pointer;
  user-select: none;

  input[type="radio"] {
    position: absolute;
    opacity: 0;
    cursor: pointer;

    &:checked ~ .custom-radio {
      border-color: map-get(map-get($colors, primary), main);
    }

    &:checked ~ .custom-radio::after {
      transform: scale(1);
    }
  }

  .custom-radio {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    height: 18px;
    width: 18px;
    background-color: white;
    border: 2px solid map-get($shades, sliver);
    border-radius: 50%;
    transition: all 0.2s ease;

    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: map-get(map-get($colors, primary), main);
      transform: translate(-50%, -50%) scale(0);
      transition: transform 0.2s ease;
    }
  }


  // Nếu không dùng .custom-radio trong DOM thì dùng dạng pseudo
  input[type="radio"] + span::before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 18px;
    height: 18px;
    border: 2px solid map-get($shades, sliver);
    border-radius: 50%;
    background: white;
  }

  input[type="radio"]:checked + span::after {
    content: "";
    position: absolute;
    left: 4px;
    top: 50%;
    transform: translateY(-50%);
    width: 13px;
    height: 13px;
    background: map-get(map-get($colors, primary), main);
    border-radius: 50%;
  }
}

.btn {
  &.disable {
    cursor: not-allowed;
    pointer-events: none;
  }
}

.text-mute-2 {
  color: $gray-50;
}

.transition-all {
  transition: all .15s ease-out;
}

.h {
  &-80 {
    max-height: 80px;
    height: 80px;
  }
}

.w {
  &-0 {
    max-width: 0;
    width: 100%;
    border: 0 !important;
  }

  &-100 {
    max-width: 100%;
    width: 100%;
  }

  &-312 {
    max-width: 312px;
    width: 100%;
  }

  &-420 {
    max-width: 420px;
    width: 100%;
  }
}

.bg-document {
  background: linear-gradient(96deg, rgba(32, 144, 253, 0.10) 0%, rgba(159, 105, 121, 0.10) 33%, rgba(248, 91, 31, 0.10) 65%, rgba(233, 153, 63, 0.10) 100%), #FFF;
}

.bg-blur-white {
  background: #fffffff2;
  color: #0a0a0a;
}

.progress-circle {
  display: flex;
  justify-content: center;
  align-items: center;
}

.progress-circle svg {
  //transform: rotate(90deg);
}

.page-break {
  page-break-before: always; /* hoặc page-break-after: always; */
  break-before: always; /* fallback cho trình mới */
}

.none-appear {
  display: none;
}

.modal {
  .modal-dialog {
    &.dialog {
      max-width: 400px !important;
    }
  }

  &.is-open {
    .modal-dialog {
      &.dialog {
        max-width: 400px !important;
      }
    }
  }
}
